version: '3.8'
# docker-compose -f wfq.yum up 
# docker exec -it es bin/elasticsearch-create-enrollment-token -s kibana
# docker exec -it es bin/elasticsearch-reset-password -u elastic
# docker exec -it es bin/elasticsearch-users useradd kba -p W2316195243 -r kibana_system
# docker exec -it es bin/elasticsearch-users roles kba -a kibana_admin
services:
  jdk17:
    image: jdk_wfq
    container_name: boot
    ports:
      - "48080:48080"
    volumes:
      - ./logs:/app/src/main/resources/logs  # 映射日志目录
    environment:
      - TZ=Asia/Shanghai

  mysqldb:
    image: mysql:8.0
    container_name: ms8
    environment:
      MYSQL_ROOT_PASSWORD: W2316195243
      MYSQL_DATABASE: wufangquan
      MYSQL_USER: myuser
      MYSQL_PASSWORD: W2316195243
      TZ: Asia/Shanghai
      LANG: C.UTF-8
      MYSQL_CHARSET: utf8mb4
      MYSQL_COLLATION: utf8mb4_unicode_ci
    ports:
      - "43307:3306"
    volumes:
      - mysqldb_data:/var/lib/mysql
#chmod 644 ./mysql_conf/custom.cnf
#docker exec -it ms8 sh
#chmod 644 /etc/mysql/conf.d/custom.cnf
#ls -l /etc/mysql/conf.d/custom.cnf
      - ./mysql_conf/custom.cnf:/etc/mysql/conf.d/custom.cnf
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7.2-alpine
    container_name: rds
    ports:
      - "46379:6379"
    volumes:
      - redis-data:/data
    command: ["redis-server", "--appendonly", "yes"]
    restart: unless-stopped

  kkfileview:
    image: keking/kkfileview:latest
    container_name: kkf
    restart: unless-stopped
    ports:
      - "48012:8012"
    volumes:
      - ./files:/opt/kkfileview/files      # 缓存文件目录
#      - ./conf:/opt/kkfileview/conf        # 可选：自定义配置目录
    environment:
      - KKFILEVIEW_CACHE_ENABLE=true       # 启用缓存功能

  elasticsearch:
    image: elasticsearch:7.17.28
    container_name: es
    environment:
      - xpack.security.enabled=false
      - xpack.security.http.ssl.enabled=false
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - ELASTIC_PASSWORD=W2316195243
    ports:
      - "49200:9200"
    volumes:
      - es_data:/usr/share/elasticsearch/data
    ulimits:
      memlock:
        soft: -1
        hard: -1

  kibana:
    image: kibana:7.17.28
    container_name: kba
    ports:
      - "45601:5601"
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
      ELASTICSEARCH_USERNAME: kba
      ELASTICSEARCH_PASSWORD: W2316195243
      ELASTICSEARCH_SSL_VERIFICATIONMODE: none  # 关闭自签名证书校验，开发用
    depends_on:
      - elasticsearch

#docker exec fjm flink run /FlinkJob-1.0-SNAPSHOT.jar
  flink-jobmanager:
   image: flink:1.17-scala_2.12
   container_name: fjm
   ports:
     - "48081:8081"
   environment:
     - |
       FLINK_PROPERTIES=
       jobmanager.rpc.address: flink-jobmanager
       taskmanager.numberOfTaskSlots: 4
       state.checkpoints.dir: file:///flink/checkpoints
       state.savepoints.dir: file:///flink/savepoints
       state.backend: filesystem
   volumes:
     - ./flink/checkpoints:/flink/checkpoints
     - ./flink/savepoints:/flink/savepoints
     - ./flink/jobmanager:/flink/jobmanager
     - ./flink/jobs/FlinkJob-1.0-SNAPSHOT.jar:/FlinkJob-1.0-SNAPSHOT.jar
     - ./flink/start-jobmanager.sh:/start-jobmanager.sh
   command: ["bash", "/start-jobmanager.sh"]
   networks:
     - default

  flink-taskmanager:
    image: flink:1.17-scala_2.12
    container_name: ftm
    command: taskmanager
    depends_on:
      - flink-jobmanager
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: flink-jobmanager
        taskmanager.numberOfTaskSlots: 4
    volumes:
      - ./flink/taskmanager:/flink/taskmanager
    networks:
      - default

volumes:
  mysqldb_data:
  redis-data:
  es_data:
